curr_state_xy_data_dict = {
    'Replay Buffer Current States (x,y coordinates)': rb_observations[:, 0:2],
    'Final Policy Current States (x,y coordinates)': fp_observations[:, 0:2],
}

next_state_xy_data_dict = {
    'Replay Buffer Next States (x,y coordinates)': rb_next_observations[:, 0:2],
    'Final Policy Next States (x,y coordinates)': fp_next_observations[:, 0:2]
}

actions_data_dict = {
    'Replay Buffer Actions': rb_actions.flatten(),
    'Final Policy Actions': fp_actions.flatten()
}

velocity_dict = {
    'Replay Buffer Linear Velocities (x,y coordinates)': rb_observations[:, 3:4], #3:5 for hexbin
    'Final Policy Linear Velocities (x,y coordinates)': fp_observations[:, 3:4]
}

angle_dict = {
    'Replay Buffer Lander`s angle':rb_observations[:, 4],
    'Replay Buffer Lander`s angular velocity':fp_observations[:, 4],
    'Final Policy Lander`s angle': rb_observations[:, 5],
    'Final Policy Lander`s angular velocity': fp_observations[:, 5]
}


<<XY>>


xy_hexbin = plot_hexbin(curr_state_xy_data_dict | next_state_xy_data_dict, f_size=(18,18))




<<ACTIONS>>>



for name, data in actions_data_dict.items():
    print('='*100)
    print(name + ' Stats:')
    print('Total number of observations: ', len(data), '\n')
    actions_id, counts = np.unique(data, return_counts=True)
    for action_id, count in zip(actions_id, counts):
        print('Action ID:', action_id)
        print('Action Label: ', actions_labels[action_id])
        print('How many time the action was taken (total): ', count)
        print('How often the action was taken (in %): ', count/len(data), '\n')

actions_labels = {0:'Do Nothing', 1:'Fire Left Engine', 2:'Fire Main Engine', 3:'Fire Right Engine'}

hist_actions_plot = plot_hist(data_dict=actions_data_dict, single_ax=True,
                    hist_kwargs={'bins': [-0.5, 0.5, 1.5, 2.5, 3.5],'align':'mid', 'alpha': 0.5, 'rwidth': 0.8})


hist_actions_plot.axes[0].set_xticks([0, 1, 2, 3])
hist_actions_plot.axes[0].set_xticklabels(actions_labels.values())

plt.show(hist_actions_plot)